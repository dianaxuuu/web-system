#!/bin/bash
# index
# Stop on errors
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail
# Sanity check command line options
# set -x
usage() {
  echo "Usage: $0 (start|stop|restart|status)"
}
if [ $# -ne 1 ]; then
  usage
  exit 1
fi

start() {
    if [ ! -f "var/search.sqlite3" ]; then
        echo "Error: can't find search database var/sqlite3"
        echo "Try: ./bin/searchdb create"
        exit 1
    elif [ $(./bin/index status | grep "stopped" | wc -l) -eq 1 ]; then
        echo "Error: index server is not running"
        echo "Try: ./bin/index start"
        exit 1
    elif [ $(pgrep -f "flask --app search run --host 0.0.0.0 --port 8000") ]; then
        echo "Error: search server is already running"
        exit 1
    else
        echo "starting search server ..."
        mkdir -p var/log
        rm -f var/log/search.log
        flask --app search run --host 0.0.0.0 --port 8000 &> var/log/search.log &
        exit
    fi
}

stop() {
    echo "stopping search server ..."
    pkill -f "flask --app search run --host 0.0.0.0 --port 8000" || true
}
# Parse argument.  $1 is the first argument
case $1 in
  "start")
    start
    ;;
  "stop")
    stop
    ;;
  "restart")
    stop
    start
    ;;
  "status")
    if [ $(pgrep -f "flask --app search run --host 0.0.0.0 --port 8000") ]; then
        echo "search server running"
        exit
    else
        echo "search server stopped"
        exit 1
    fi
    ;;
  *)
    usage
    exit 1
    ;;
esac